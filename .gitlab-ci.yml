image: java:8-jdk

include:
  - template: Code-Quality.gitlab-ci.yml

variables:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"

before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle

stages:
 - build
 - test
 - systemTest
 - deploy
 - postDeploy

.base job template:
  except:
    - tags

.build job template:
  extends: .base job template
  stage: build
  artifacts:
    paths:
      - .gradle
      - build/

.test job template:
  extends: .base job template
  stage: test
  artifacts:
    reports:
      junit: build/test-results/**/TEST-*.xml

.latest gradle job template:
  image: gradle:latest
  allow_failure: true

Build:
  extends: .build job template
  script: ./gradlew assemble -s

Build with latest Gradle:
  extends:
   - .build job template
   - .latest gradle job template
  script: gradle assemble -s

Test:
  extends: .test job template
  needs: [Build]
  script:
    - ./gradlew check jacocoTestReport
    - bash <(curl -s https://codecov.io/bash)
  artifacts:
    reports:
      junit: build/test-results/**/TEST-*.xml

Test with latest Gradle:
  extends:
   - .test job template
   - .latest gradle job template
  needs: [Build with latest Gradle]
  script:
    - gradle check
  artifacts:
    reports:
      junit: build/test-results/**/TEST-*.xml

code_quality:
  needs: []

.deploy template:
  stage: deploy
  when: manual
  only:
    - /^release/.*$/
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - .gradle
      - subprojects/**/build

.Deploy to plugin portal:
  extends: .deploy template
  script: ./gradlew publishPlugins -Pgradle.publish.key="$PLUGIN_PORTAL_KEY" -Pgradle.publish.secret="$PLUGIN_PORTAL_SECRET" -s

.Deploy to Bintray:
  extends: .deploy template
  script:
    - ./gradlew generatePomFileForMavenJavaPublication sourcesJar javadocJar
    - ./gradlew bintrayUpload
