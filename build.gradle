buildscript {
    repositories {
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
        maven {
            url 'https://dl.bintray.com/zkovari/maven'
        }
    }

    dependencies {
        classpath 'com.adarshr:gradle-test-logger-plugin:2.0.0'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.+'
        classpath 'org.zkovari.changelog:changelog-automation-gradle-plugin:0.+'
    }
}

apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'java-library'
apply plugin: 'maven-publish'
apply plugin: 'jacoco'
apply plugin: 'com.adarshr.test-logger'
apply plugin: 'com.jfrog.bintray'

apply plugin: "org.zkovari.changelog"

project.group = 'org.zkovari.mermaid'
project.version = project.rootProject.version

if (project.hasProperty('SNAPSHOT')) {
    version = "$version-SNAPSHOT"
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

jacocoTestReport {
    getAdditionalSourceDirs().from files(sourceSets.main.allSource.srcDirs)
    getSourceDirectories().from files(sourceSets.main.allSource.srcDirs)
    getClassDirectories().from files(sourceSets.main.output)
    reports {
        xml.enabled true
        html.enabled true
        csv.enabled false
    }
}

test {
    testLogging {
        events "failed"
        exceptionFormat "full"
    }

    jacoco {
        destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
        classDumpDir = file("$buildDir/jacoco/classpathdumps")
    }
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier = 'sources'
}

task javadocJar(type: Jar) {
    from javadoc
    archiveClassifier = 'javadoc'
}

String vcsUrl = 'https://gitlab.com/zkovari/gradle-mermaid-plugin'

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact sourcesJar
            artifact javadocJar
            
            pom {
                name = project.name
                project.afterEvaluate {
                    description = project.description
                }
                url = "$vcsUrl"
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'zkovari'
                        name = 'Zsolt Kovari'
                        email = 'zsolt@kovaridev.com'
                    }
                }
                
                scm {
                    url = "$vcsUrl"
                }
            }
        }
    }
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    pkg {
        repo = 'maven'
        name = project.name
        userOrg = 'zkovari'
        licenses = ['Apache-2.0']
        vcsUrl = "$vcsUrl"
        version {
            name = project.version
            desc = project.description
            released  = new Date()
            vcsTag = "v${project.version}"
        }
    }
    publications = ['mavenJava']
    publish = true
}

task copyJarsToLib(type: Copy) {
    into "$buildDir/dependencies/libs"
    from configurations.compileOnly + configurations.default
}

task bumpVersion {
    doLast {
        def versionArray = version.toString().split(/\./)
        def last = Integer.parseInt(versionArray[versionArray.length - 1])
        versionArray[versionArray.length - 1] = Integer.toString(last + 1)
        def bumpedVersion = versionArray.join('.')

        ant.propertyfile(file: 'gradle.properties') {
            entry(key: 'version', value: bumpedVersion)
        }
    }
}
